{"remainingRequest":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/store/modules/tagsView.js","dependencies":[{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/store/modules/tagsView.js","mtime":1569381816695},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/@babel/runtime-corejs2/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/@babel/runtime-corejs2/helpers/slicedToArray\"));\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nvar state = {\n  visitedViews: [],\n  cachedViews: []\n};\nvar mutations = {\n  ADD_VISITED_VIEW: function ADD_VISITED_VIEW(state, view) {\n    if (state.visitedViews.some(function (item) {\n      return item.path == view.path;\n    })) {\n      return;\n    }\n\n    state.visitedViews.push(Object.assign({}, view, {\n      title: view.meta.title || 'no-title'\n    }));\n  },\n  ADD_CACHED_VIEW: function ADD_CACHED_VIEW(state, view) {\n    if (state.cachedViews.includes(view.name)) return;\n\n    if (!view.meta.noCache) {\n      state.cachedViews.push(view.name);\n    }\n  },\n  DEL_VISITED_VIEW: function DEL_VISITED_VIEW(state, view) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = state.visitedViews.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var _step$value = (0, _slicedToArray2.default)(_step.value, 2),\n            i = _step$value[0],\n            v = _step$value[1];\n\n        if (v.path == view.path) {\n          state.visitedViews.splice(i, 1);\n          break;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  },\n  DEL_CACHED_VIEW: function DEL_CACHED_VIEW(state, view) {\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = state.cachedViews[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var i = _step2.value;\n\n        if (i == view.name) {\n          var index = state.cachedViews.indexOf(i);\n          state.cachedViews.splice(index, 1);\n          break;\n        }\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  },\n  DEL_OTHERS_VISITED_VIEWS: function DEL_OTHERS_VISITED_VIEWS(state, view) {\n    state.visitedViews = state.visitedViews.filter(function (item) {\n      return item.path == view.path || item.meta.affix;\n    });\n  },\n  DEL_OTHERS_CACHED_VIEWS: function DEL_OTHERS_CACHED_VIEWS(state, view) {\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = state.cachedViews[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var i = _step3.value;\n\n        if (i == view.name) {\n          var index = state.cachedViews.indexOf(i);\n          state.cachedViews = state.cachedViews.splice(index, index + 1);\n          break;\n        }\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n  },\n  DEL_ALL_VISITED_VIEWS: function DEL_ALL_VISITED_VIEWS(state) {\n    var affixTags = state.cachedViews.filter(function (item) {\n      return item.meta.affix;\n    });\n    state.visitedViews = affixTags;\n  },\n  DEL_ALL_CACHED_VIEWS: function DEL_ALL_CACHED_VIEWS(state) {\n    state.cachedViews = [];\n  },\n  UPDATE_VISITED_VIEW: function UPDATE_VISITED_VIEW(state, view) {\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n      for (var _iterator4 = state.visitedViews[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n        var v = _step4.value;\n\n        if (v.path == view.path) {\n          v = Object.assign(v, view);\n          break;\n        }\n      }\n    } catch (err) {\n      _didIteratorError4 = true;\n      _iteratorError4 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n          _iterator4.return();\n        }\n      } finally {\n        if (_didIteratorError4) {\n          throw _iteratorError4;\n        }\n      }\n    }\n  }\n};\nvar actions = {\n  addVisitedView: function addVisitedView(_ref, view) {\n    var commit = _ref.commit;\n    commit('ADD_VISITED_VIEW', view);\n  },\n  addCachedView: function addCachedView(_ref2, view) {\n    var commit = _ref2.commit;\n    commit('ADD_CACHED_VIEW', view);\n  },\n  addView: function addView(_ref3, view) {\n    var dispatch = _ref3.dispatch;\n    dispatch('addVisitedView', view);\n    dispatch('addCachedView', view);\n  },\n  delVisitedView: function delVisitedView(_ref4, view) {\n    var commit = _ref4.commit,\n        state = _ref4.state;\n    return new Promise(function (resolve) {\n      commit('DEL_VISITED_VIEW', view);\n      resolve((0, _toConsumableArray2.default)(state.visitedViews));\n    });\n  },\n  delCachedView: function delCachedView(_ref5, view) {\n    var commit = _ref5.commit,\n        state = _ref5.state;\n    return new Promise(function (resolve) {\n      commit('DEL_CACHED_VIEW', view);\n      resolve((0, _toConsumableArray2.default)(state.cachedViews));\n    });\n  },\n  delView: function delView(_ref6, view) {\n    var commit = _ref6.commit,\n        state = _ref6.state,\n        dispatch = _ref6.dispatch;\n    return new Promise(function (resolve) {\n      dispatch('delVisitedView', view);\n      dispatch('delCachedView', view);\n      resolve({\n        visitedViews: (0, _toConsumableArray2.default)(state.visitedViews),\n        cachedView: (0, _toConsumableArray2.default)(state.cachedViews)\n      });\n    });\n  },\n  delOthersVisitedViews: function delOthersVisitedViews(_ref7, view) {\n    var commit = _ref7.commit,\n        state = _ref7.state;\n    return new Promise(function (resolve) {\n      commit('DEL_OTHERS_VISITED_VIEWS', view);\n      resolve((0, _toConsumableArray2.default)(state.visitedViews));\n    });\n  },\n  delOthersCachedViews: function delOthersCachedViews(_ref8, view) {\n    var commit = _ref8.commit,\n        state = _ref8.state;\n    return new Promise(function (resolve) {\n      commit('DEL_OTHERS_CACHED_VIEWS', view);\n      resolve((0, _toConsumableArray2.default)(state.cachedViews));\n    });\n  },\n  delOthersViews: function delOthersViews(_ref9, view) {\n    var dispatch = _ref9.dispatch,\n        state = _ref9.state;\n    return new Promise(function (resolve) {\n      dispatch('delOthersVisitedViews', view);\n      dispatch('delOthersCachedViews', view);\n      resolve({\n        visitedViews: (0, _toConsumableArray2.default)(state.visitedViews),\n        cachedView: (0, _toConsumableArray2.default)(state.cachedViews)\n      });\n    });\n  },\n  delAllVisitedViews: function delAllVisitedViews(_ref10, view) {\n    var commit = _ref10.commit,\n        state = _ref10.state;\n    return new Promise(function (resolve) {\n      commit('DEL_ALL_VISITED_VIEWS', view);\n      resolve((0, _toConsumableArray2.default)(state.visitedViews));\n    });\n  },\n  delAllCachedViews: function delAllCachedViews(_ref11, view) {\n    var commit = _ref11.commit,\n        state = _ref11.state;\n    return new Promise(function (resolve) {\n      commit('DEL_ALL_CACHED_VIEWS', view);\n      resolve((0, _toConsumableArray2.default)(state.cachedViews));\n    });\n  },\n  delAllViews: function delAllViews(_ref12, view) {\n    var dispatch = _ref12.dispatch,\n        state = _ref12.state;\n    return new Promise(function (resolve) {\n      dispatch('delAllVisitedViews', view);\n      dispatch('delAllCachedViews', view);\n      resolve({\n        visitedViews: (0, _toConsumableArray2.default)(state.visitedViews),\n        cachedView: (0, _toConsumableArray2.default)(state.cachedViews)\n      });\n    });\n  },\n  updateVisitedView: function updateVisitedView(_ref13, view) {\n    var commit = _ref13.commit;\n    commit('updateVisitedView', view);\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",{"version":3,"sources":["/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/store/modules/tagsView.js"],"names":["state","visitedViews","cachedViews","mutations","ADD_VISITED_VIEW","view","some","item","path","push","Object","assign","title","meta","ADD_CACHED_VIEW","includes","name","noCache","DEL_VISITED_VIEW","entries","i","v","splice","DEL_CACHED_VIEW","index","indexOf","DEL_OTHERS_VISITED_VIEWS","filter","affix","DEL_OTHERS_CACHED_VIEWS","DEL_ALL_VISITED_VIEWS","affixTags","DEL_ALL_CACHED_VIEWS","UPDATE_VISITED_VIEW","actions","addVisitedView","commit","addCachedView","addView","dispatch","delVisitedView","Promise","resolve","delCachedView","delView","cachedView","delOthersVisitedViews","delOthersCachedViews","delOthersViews","delAllVisitedViews","delAllCachedViews","delAllViews","updateVisitedView","namespaced"],"mappings":"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","sourcesContent":["const state = {\n    visitedViews: [],\n    cachedViews: []\n}\n\nconst mutations = {\n    ADD_VISITED_VIEW: (state, view) =>{\n        if(state.visitedViews.some(item => item.path == view.path)){\n            return\n        }\n        state.visitedViews.push(\n            Object.assign({}, view, {title: view.meta.title || 'no-title'})\n        )\n    },\n    ADD_CACHED_VIEW: (state, view) => {\n        if(state.cachedViews.includes(view.name)) return\n        if(!view.meta.noCache){\n            state.cachedViews.push(view.name)\n        }\n    },\n    DEL_VISITED_VIEW:(state, view) => {\n        for(const [i, v] of state.visitedViews.entries()){\n            if(v.path == view.path){\n                state.visitedViews.splice(i, 1)\n                break\n            }\n        }\n    },\n    DEL_CACHED_VIEW:(state, view) => {\n        for(const i of state.cachedViews){\n            if(i == view.name){\n                const index = state.cachedViews.indexOf(i);\n                state.cachedViews.splice(index, 1);\n                break;\n            }\n        }\n    },\n    DEL_OTHERS_VISITED_VIEWS: (state, view) => {\n        state.visitedViews = state.visitedViews.filter(item => item.path == view.path || item.meta.affix)\n    },\n    DEL_OTHERS_CACHED_VIEWS: (state, view) => {\n        for(const i of state.cachedViews){\n            if(i == view.name){\n                const index = state.cachedViews.indexOf(i);\n                state.cachedViews = state.cachedViews.splice(index, index + 1);\n                break;\n            }\n        }\n    },\n    DEL_ALL_VISITED_VIEWS: (state) => {\n        const affixTags = state.cachedViews.filter(item => item.meta.affix)\n        state.visitedViews = affixTags\n    },\n    DEL_ALL_CACHED_VIEWS: (state) => {\n        state.cachedViews = []\n    },\n    UPDATE_VISITED_VIEW: (state, view) =>{\n        for(let v of state.visitedViews){\n            if(v.path == view.path){\n                v = Object.assign(v, view);\n                break;\n            }\n        }\n    }\n}\n\nconst actions = {\n    addVisitedView({commit}, view){\n        commit('ADD_VISITED_VIEW', view);\n    },\n    addCachedView({commit}, view) {\n        commit('ADD_CACHED_VIEW', view);\n    },\n    addView({dispatch}, view){\n        dispatch('addVisitedView', view);\n        dispatch('addCachedView', view);\n    },\n    delVisitedView({commit, state}, view) {\n        return new Promise(resolve => {\n            commit('DEL_VISITED_VIEW', view);\n            resolve([...state.visitedViews])\n        })\n    },\n    delCachedView({commit, state}, view) {\n        return new Promise(resolve => {\n            commit('DEL_CACHED_VIEW', view);\n            resolve([...state.cachedViews]);\n        })\n    },\n    delView({commit, state, dispatch}, view){\n        return new Promise(resolve => {\n            dispatch('delVisitedView', view);\n            dispatch('delCachedView', view);\n\n            resolve({\n                visitedViews: [...state.visitedViews],\n                cachedView: [...state.cachedViews]\n            })\n        })\n\n    },\n    delOthersVisitedViews({commit, state}, view){\n        return new Promise(resolve => {\n            commit('DEL_OTHERS_VISITED_VIEWS', view);\n            resolve([...state.visitedViews])\n        })\n    },\n    delOthersCachedViews({commit, state}, view){\n        return new Promise(resolve => {\n            commit('DEL_OTHERS_CACHED_VIEWS', view);\n            resolve([...state.cachedViews])\n        })\n    },\n    delOthersViews({dispatch, state}, view){\n        return new Promise(resolve => {\n            dispatch('delOthersVisitedViews', view)\n            dispatch('delOthersCachedViews', view)\n\n            resolve({\n                visitedViews: [...state.visitedViews],\n                cachedView: [...state.cachedViews]\n            })\n        })\n    },\n    delAllVisitedViews({commit, state}, view){\n        return new Promise(resolve => {\n            commit('DEL_ALL_VISITED_VIEWS', view);\n            resolve([...state.visitedViews])\n        })\n    },\n    delAllCachedViews({commit, state}, view){\n        return new Promise(resolve => {\n            commit('DEL_ALL_CACHED_VIEWS', view);\n            resolve([...state.cachedViews])\n        })\n    },\n    delAllViews({dispatch, state}, view){\n        return new Promise(resolve => {\n            dispatch('delAllVisitedViews', view)\n            dispatch('delAllCachedViews', view)\n\n            resolve({\n                visitedViews: [...state.visitedViews],\n                cachedView: [...state.cachedViews]\n            })\n        })\n    },\n    updateVisitedView({commit}, view) {\n        commit('updateVisitedView', view)\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions\n}"]}]}