{"remainingRequest":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/mock/modules/user.js","dependencies":[{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/mock/modules/user.js","mtime":1569212090160},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar tokens = {\n  admin: {\n    token: 'admin-token'\n  },\n  editor: {\n    token: 'editor-token'\n  }\n};\nvar users = {\n  'admin-token': {\n    roles: ['admin'],\n    avatar: 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif',\n    name: 'Super Admin'\n  },\n  'editor-token': {\n    roles: ['editor'],\n    avatar: 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif',\n    name: 'Normal Editor'\n  }\n};\nvar _default = [// user login\n{\n  url: '/user/login',\n  type: 'post',\n  response: function response(config) {\n    var username = config.body.username;\n    var token = tokens[username]; // mock error\n\n    if (!token) {\n      return {\n        code: 60204,\n        message: 'Account and password are incorrect.'\n      };\n    }\n\n    return {\n      code: 20000,\n      data: token\n    };\n  }\n}, // get user info\n{\n  url: '/user/info\\.*',\n  type: 'get',\n  response: function response(config) {\n    var token = config.query.token;\n    var info = users[token]; // mock error\n\n    if (!info) {\n      return {\n        code: 50008,\n        message: 'Login failed, unable to get user details.'\n      };\n    }\n\n    return {\n      code: 20000,\n      data: info\n    };\n  }\n}, // user logout\n{\n  url: '/user/logout',\n  type: 'post',\n  response: function response(_) {\n    return {\n      code: 20000,\n      data: 'success'\n    };\n  }\n}];\nexports.default = _default;",{"version":3,"sources":["/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/mock/modules/user.js"],"names":["tokens","admin","token","editor","users","roles","avatar","name","url","type","response","config","username","body","code","message","data","query","info","_"],"mappings":";;;;;;AACA,IAAMA,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE;AADJ,GADI;AAIXC,EAAAA,MAAM,EAAE;AACJD,IAAAA,KAAK,EAAE;AADH;AAJG,CAAf;AASA,IAAME,KAAK,GAAG;AACV,iBAAe;AACXC,IAAAA,KAAK,EAAE,CAAC,OAAD,CADI;AAEXC,IAAAA,MAAM,EAAE,qEAFG;AAGXC,IAAAA,IAAI,EAAE;AAHK,GADL;AAMV,kBAAgB;AACZF,IAAAA,KAAK,EAAE,CAAC,QAAD,CADK;AAEZC,IAAAA,MAAM,EAAE,qEAFI;AAGZC,IAAAA,IAAI,EAAE;AAHM;AANN,CAAd;eAae,CACX;AACA;AACIC,EAAAA,GAAG,EAAE,aADT;AAEIC,EAAAA,IAAI,EAAE,MAFV;AAGIC,EAAAA,QAAQ,EAAE,kBAAAC,MAAM,EAAI;AAAA,QACRC,QADQ,GACKD,MAAM,CAACE,IADZ,CACRD,QADQ;AAEhB,QAAMV,KAAK,GAAGF,MAAM,CAACY,QAAD,CAApB,CAFgB,CAIhB;;AACA,QAAI,CAACV,KAAL,EAAY;AACR,aAAO;AACHY,QAAAA,IAAI,EAAE,KADH;AAEHC,QAAAA,OAAO,EAAE;AAFN,OAAP;AAIH;;AAED,WAAO;AACHD,MAAAA,IAAI,EAAE,KADH;AAEHE,MAAAA,IAAI,EAAEd;AAFH,KAAP;AAIH;AAnBL,CAFW,EAwBX;AACA;AACIM,EAAAA,GAAG,EAAE,eADT;AAEIC,EAAAA,IAAI,EAAE,KAFV;AAGIC,EAAAA,QAAQ,EAAE,kBAAAC,MAAM,EAAI;AAAA,QACRT,KADQ,GACES,MAAM,CAACM,KADT,CACRf,KADQ;AAEhB,QAAMgB,IAAI,GAAGd,KAAK,CAACF,KAAD,CAAlB,CAFgB,CAIhB;;AACA,QAAI,CAACgB,IAAL,EAAW;AACP,aAAO;AACHJ,QAAAA,IAAI,EAAE,KADH;AAEHC,QAAAA,OAAO,EAAE;AAFN,OAAP;AAIH;;AAED,WAAO;AACHD,MAAAA,IAAI,EAAE,KADH;AAEHE,MAAAA,IAAI,EAAEE;AAFH,KAAP;AAIH;AAnBL,CAzBW,EA+CX;AACA;AACIV,EAAAA,GAAG,EAAE,cADT;AAEIC,EAAAA,IAAI,EAAE,MAFV;AAGIC,EAAAA,QAAQ,EAAE,kBAAAS,CAAC,EAAI;AACX,WAAO;AACHL,MAAAA,IAAI,EAAE,KADH;AAEHE,MAAAA,IAAI,EAAE;AAFH,KAAP;AAIH;AARL,CAhDW,C","sourcesContent":["\nconst tokens = {\n    admin: {\n        token: 'admin-token'\n    },\n    editor: {\n        token: 'editor-token'\n    }\n}\n\nconst users = {\n    'admin-token': {\n        roles: ['admin'],\n        avatar: 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif',\n        name: 'Super Admin'\n    },\n    'editor-token': {\n        roles: ['editor'],\n        avatar: 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif',\n        name: 'Normal Editor'\n    }\n}\n\nexport default [\n    // user login\n    {\n        url: '/user/login',\n        type: 'post',\n        response: config => {\n            const { username } = config.body\n            const token = tokens[username]\n\n            // mock error\n            if (!token) {\n                return {\n                    code: 60204,\n                    message: 'Account and password are incorrect.'\n                }\n            }\n\n            return {\n                code: 20000,\n                data: token\n            }\n        }\n    },\n\n    // get user info\n    {\n        url: '/user/info\\.*',\n        type: 'get',\n        response: config => {\n            const { token } = config.query\n            const info = users[token]\n\n            // mock error\n            if (!info) {\n                return {\n                    code: 50008,\n                    message: 'Login failed, unable to get user details.'\n                }\n            }\n\n            return {\n                code: 20000,\n                data: info\n            }\n        }\n    },\n\n    // user logout\n    {\n        url: '/user/logout',\n        type: 'post',\n        response: _ => {\n            return {\n                code: 20000,\n                data: 'success'\n            }\n        }\n    }\n]\n"]}]}