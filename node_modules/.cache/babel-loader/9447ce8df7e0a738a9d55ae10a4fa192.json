{"remainingRequest":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/layout/components/TagsView/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/layout/components/TagsView/index.vue","mtime":1569395980114},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/@babel/runtime-corejs2/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/@babel/runtime-corejs2/helpers/defineProperty\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _ScrollPane = _interopRequireDefault(require(\"./ScrollPane\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _default = {\n  components: {\n    ScrollPane: _ScrollPane.default\n  },\n  computed: {\n    visitedViews: function visitedViews() {\n      return this.$store.state.tagsView.visitedViews;\n    },\n    routes: function routes() {\n      return this.$store.state.permission.routes;\n    }\n  },\n  watch: {\n    $route: function $route() {\n      this.addTags();\n      this.moveToCurrentTag();\n    },\n    visible: function visible(value) {\n      if (value) {\n        document.body.addEventListener(\"click\", this.closeMenu);\n      } else {\n        document.body.removeEventListener(\"click\", this.closeMenu);\n      }\n    }\n  },\n  data: function data() {\n    return {\n      visible: false,\n      top: 0,\n      left: 0,\n      selectedTag: {},\n      affixTags: []\n    };\n  },\n  mounted: function mounted() {\n    this.initTags();\n    this.addTags();\n  },\n  methods: {\n    isActive: function isActive(route) {\n      return this.$route.path === route.path;\n    },\n    initTags: function initTags() {\n      var affixTags = this.affixTags = this.filterAffixTag(this.routes);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = affixTags[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var tag = _step.value;\n\n          if (tag.name) {\n            this.$store.dispatch('tagsView/addVisitedView', tag);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    addTags: function addTags() {\n      if (this.$route.name) {\n        this.$store.dispatch('tagsView/addView', this.$route);\n      }\n    },\n    filterAffixTag: function filterAffixTag(routes) {\n      var _this = this;\n\n      var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n      var tags = [];\n      routes.forEach(function (route) {\n        if (route.meta && route.meta.affix) {\n          var tagPath = _path.default.resolve(basePath, route.path);\n\n          tags.push({\n            fullPath: tagPath,\n            path: tagPath,\n            name: route.name,\n            meta: _objectSpread({}, route.meta)\n          });\n        }\n\n        if (route.children) {\n          var tempTags = _this.filterAffixTag(route.children, route.path);\n\n          if (tempTags.length > 0) {\n            tags = [].concat((0, _toConsumableArray2.default)(tags), (0, _toConsumableArray2.default)(tempTags));\n          }\n        }\n      });\n      return tags;\n    },\n    moveToCurrentTag: function moveToCurrentTag() {\n      var _this2 = this;\n\n      var tags = this.$refs.tag;\n      this.$nextTick(function () {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = tags[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var tag = _step2.value;\n\n            if (tag.to.path == _this2.$route.path) {\n              _this2.$refs.scrollPane.moveToTarget(tag);\n\n              if (tag.to.fullPath != _this2.$route.fullPath) {\n                _this2.$store.dispatch('tagsView/updateVisitedView', _this2.$route);\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      });\n    },\n    refreshSelectedTag: function refreshSelectedTag(view) {\n      var _this3 = this;\n\n      this.$store.dispatch('tagsView/updateVisitedView', view).then(function () {\n        var fullPath = view.fullPath;\n\n        _this3.$nextTick(function () {\n          _this3.$router.replace({\n            path: '/redirect' + fullPath\n          });\n        });\n      });\n    },\n    closeSelectedTag: function closeSelectedTag(view) {\n      var _this4 = this;\n\n      this.$store.dispatch('tagsView/delView', view).then(function () {\n        if (_this4.isActive(view)) {\n          _this4.toLastView(_this4.visitedViews, view);\n        }\n      });\n    },\n    closeOthersTags: function closeOthersTags() {\n      var _this5 = this;\n\n      this.$router.push(this.selectedTag);\n      this.$store.dispatch('tagsView/delOthersViews', this.selectedTag).then(function () {\n        _this5.moveToCurrentTag();\n      });\n    },\n    closeAllTags: function closeAllTags(view) {\n      var _this6 = this;\n\n      this.$store.dispatch('tagsView/delAllViews').then(function (visitedViews) {\n        if (_this6.affixTags.some(function (tag) {\n          return tag.path == view.path;\n        })) {\n          return;\n        }\n\n        _this6.toLastView(visitedViews, view);\n      });\n    },\n    toLastView: function toLastView(visitedViews, view) {\n      var lastView = visitedViews.slice(-1)[0];\n\n      if (lastView) {\n        this.$router.push(lastView);\n      } else {\n        if (view.name == 'Dashboard') {\n          this.$router.replace({\n            path: '/redirect' + view.fullPath\n          });\n        } else {\n          this.$router.push('/');\n        }\n      }\n    },\n    openMenu: function openMenu(tag, e) {\n      var menuMinWidth = 105;\n      var offsetLeft = this.$el.getBoundingClientRect().left;\n      var offsetWidth = this.$el.offsetWidth;\n      var maxLeft = offsetWidth - menuMinWidth;\n      var left = e.clientX - offsetLeft + 15;\n\n      if (left > maxLeft) {\n        this.left = maxLeft;\n      } else {\n        this.left = left;\n      }\n\n      this.top = e.clientY;\n      this.visible = true;\n      this.selectedTag = tag;\n    },\n    closeMenu: function closeMenu() {\n      this.visible = false;\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"tags-view_container\" class=\"tags-view-container\">\n        <scroll-pane ref=\"scrollPane\" class=\"tags-view-wrapper\">\n            <router-link\n                v-for=\"tag in visitedViews\"\n                ref=\"tag\"\n                :key=\"tag.path\"\n                :class=\"isActive(tag)?'active': ''\"\n                :to=\"{path: tag.path, query:tag.query, fullPath: tag.fullPath}\"\n                tag=\"span\"\n                class=\"tags-view-item\"\n                @click.middle.native=\"closeSelectedTag(tag)\"\n                @contextmenu.prevent.native=\"openMenu(tag, $event)\"\n            >\n                {{tag.title}}\n                <span v-if=\"!tag.meta.affix\" class=\"el-icon-close\" @click.prevent.stop=\"closeSelectedTag(tag)\"></span>\n            </router-link>\n        </scroll-pane>\n\n        <ul v-show=\"visible\" :style=\"{left: left + 'px', top: top + 'px'}\" class=\"contextmenu\">\n            <li @click=\"refreshSelectedTag(selectedTag)\">刷新</li>\n            <li v-if=\"!(selectedTag.meta && selectedTag.meta.affix)\" @click=\"closeSelectedTag(selectedTag)\">关闭</li>\n            <li @click=\"closeOthersTags\">关闭其他</li>\n            <li @click=\"closeAllTags(selectedTag)\">关闭所有</li>\n        </ul>\n    </div>\n</template>\n<script>\n    import ScrollPane from './ScrollPane'\n    import path from 'path'\n    export default {\n        components:{\n            ScrollPane\n        },\n        computed:{\n            visitedViews(){\n                return this.$store.state.tagsView.visitedViews\n            },\n            routes(){\n                return this.$store.state.permission.routes\n            }\n        },\n        watch:{\n            $route(){\n                this.addTags()\n                this.moveToCurrentTag()\n            },\n            visible(value){\n                if(value){\n                    document.body.addEventListener(\"click\", this.closeMenu)\n                } else {\n                    document.body.removeEventListener(\"click\", this.closeMenu)\n                }\n            }\n        },\n        data(){\n            return {\n                visible: false,\n                top: 0,\n                left: 0,\n                selectedTag: {},\n                affixTags: []\n            }\n        },\n        mounted(){\n            this.initTags();\n            this.addTags();\n        },\n        methods: {\n            isActive(route){\n                return this.$route.path === route.path\n            },\n            initTags(){\n                const affixTags = this.affixTags = this.filterAffixTag(this.routes)\n                for(const tag of affixTags){\n                    if(tag.name){\n                        this.$store.dispatch('tagsView/addVisitedView', tag);\n                    }\n                }\n            },\n            addTags(){\n                if(this.$route.name){\n                    this.$store.dispatch('tagsView/addView', this.$route)\n                }\n            },\n            filterAffixTag(routes, basePath = '/'){\n                let tags = []\n                routes.forEach(route => {\n                    if(route.meta && route.meta.affix){\n                        const tagPath = path.resolve(basePath, route.path);\n                        tags.push({\n                            fullPath: tagPath,\n                            path: tagPath,\n                            name: route.name,\n                            meta: {...route.meta}\n                        })\n                    }\n                    if(route.children){\n                        const tempTags = this.filterAffixTag(route.children, route.path)\n                        if(tempTags.length > 0){\n                            tags = [...tags, ...tempTags]\n                        }\n                    }\n                })\n                return tags;\n            },\n            moveToCurrentTag(){\n                const tags = this.$refs.tag;\n                this.$nextTick(() => {\n                    for(const tag of tags){\n                        if(tag.to.path == this.$route.path){\n                            this.$refs.scrollPane.moveToTarget(tag);\n                            if(tag.to.fullPath != this.$route.fullPath){\n                                this.$store.dispatch('tagsView/updateVisitedView', this.$route)\n                            }\n                        }\n                    }\n                })\n            },\n            refreshSelectedTag(view){\n                this.$store.dispatch('tagsView/updateVisitedView', view).then(()=>{\n                    const {fullPath} = view;\n                    this.$nextTick(() => {\n                        this.$router.replace({\n                            path: '/redirect' + fullPath\n                        })\n                    })\n                })\n            },\n            closeSelectedTag(view){\n                this.$store.dispatch('tagsView/delView', view).then(() => {\n                    if(this.isActive(view)){\n                        this.toLastView(this.visitedViews, view)\n                    }\n                })\n            },\n            closeOthersTags(){\n                this.$router.push(this.selectedTag)\n                this.$store.dispatch('tagsView/delOthersViews', this.selectedTag).then(() => {\n                    this.moveToCurrentTag()\n                })\n            },\n            closeAllTags(view){\n                this.$store.dispatch('tagsView/delAllViews').then((visitedViews) => {\n                    if(this.affixTags.some(tag=>tag.path == view.path)){\n                        return\n                    }\n                    this.toLastView(visitedViews, view)\n                })\n            },\n            toLastView(visitedViews, view){\n                const lastView = visitedViews.slice(-1)[0]\n                if(lastView){\n                    this.$router.push(lastView)\n                } else {\n                    if(view.name == 'Dashboard'){\n                        this.$router.replace({path: '/redirect' + view.fullPath})\n                    } else {\n                        this.$router.push('/')\n                    }\n                }\n            },\n            openMenu(tag, e){\n                const menuMinWidth = 105\n                const offsetLeft = this.$el.getBoundingClientRect().left\n                const offsetWidth = this.$el.offsetWidth\n                const maxLeft = offsetWidth - menuMinWidth\n                const left = e.clientX - offsetLeft + 15\n\n                if(left > maxLeft){\n                    this.left = maxLeft\n                } else {\n                    this.left = left;\n                }\n\n                this.top = e.clientY\n                this.visible = true\n                this.selectedTag = tag;\n            },\n            closeMenu(){\n                this.visible = false\n            }\n        }\n    }\n</script>\n\n\n<style lang=\"scss\" scoped>\n    .tags-view-container {\n        height: 34px;\n        width: 100%;\n        background: #fff;\n        border-bottom: 1px solid #d8dce5;\n        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, .12), 0 0 3px 0 rgba(0, 0, 0, .04);\n        .tags-view-wrapper {\n            .tags-view-item {\n                display: inline-block;\n                position: relative;\n                cursor: pointer;\n                height: 26px;\n                line-height: 26px;\n                border: 1px solid #d8dce5;\n                color: #495060;\n                background: #fff;\n                padding: 0 8px;\n                font-size: 12px;\n                margin-left: 5px;\n                margin-top: 4px;\n                &:first-of-type {\n                    margin-left: 15px;\n                }\n                &:last-of-type {\n                    margin-right: 15px;\n                }\n                &.active {\n                    background-color: #42b983;\n                    color: #fff;\n                    border-color: #42b983;\n                    &::before {\n                        content: '';\n                        background: #fff;\n                        display: inline-block;\n                        width: 8px;\n                        height: 8px;\n                        border-radius: 50%;\n                        position: relative;\n                        margin-right: 2px;\n                    }\n                }\n            }\n        }\n        .contextmenu {\n            margin: 0;\n            background: #fff;\n            z-index: 3000;\n            position: absolute;\n            list-style-type: none;\n            padding: 5px 0;\n            border-radius: 4px;\n            font-size: 12px;\n            font-weight: 400;\n            color: #333;\n            box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, .3);\n            li {\n                margin: 0;\n                padding: 7px 16px;\n                cursor: pointer;\n                &:hover {\n                    background: #eee;\n                }\n            }\n        }\n    }\n</style>\n\n<style lang=\"scss\">\n    //reset element css of el-icon-close\n    .tags-view-wrapper {\n        .tags-view-item {\n            .el-icon-close {\n                width: 16px;\n                height: 16px;\n                vertical-align: 2px;\n                border-radius: 50%;\n                text-align: center;\n                transition: all .3s cubic-bezier(.645, .045, .355, 1);\n                transform-origin: 100% 50%;\n                &:before {\n                    transform: scale(.6);\n                    display: inline-block;\n                    vertical-align: -3px;\n                }\n                &:hover {\n                    background-color: #b4bccc;\n                    color: #fff;\n                }\n            }\n        }\n    }\n</style>\n"],"sourceRoot":"src/layout/components/TagsView"}]}