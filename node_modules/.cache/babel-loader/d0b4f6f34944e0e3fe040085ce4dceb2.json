{"remainingRequest":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/store/modules/permission.js","dependencies":[{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/store/modules/permission.js","mtime":1569295464863},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterAsyncRoutes = filterAsyncRoutes;\nexports.default = void 0;\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/@babel/runtime-corejs2/helpers/defineProperty\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nvar _router = require(\"@/router\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction hasPermission(roles, route) {\n  if (route.meta && route.meta.roles) {\n    return roles.some(function (role) {\n      return route.meta.roles.includes(role);\n    });\n  } else {\n    return true;\n  }\n}\n\nfunction filterAsyncRoutes(routes, roles) {\n  var res = [];\n  routes.forEach(function (route) {\n    var tmp = _objectSpread({}, route);\n\n    if (hasPermission(roles, tmp)) {\n      if (tmp.children()) {\n        tmp.children = filterAsyncRoutes(tmp.children(), roles);\n      }\n\n      res.push(tmp);\n    }\n  });\n  return res;\n}\n\nvar state = {\n  routes: [],\n  addRoutes: []\n};\nvar mutations = {\n  SET_ROUTES: function SET_ROUTES(state, routes) {\n    state.addRoutes = routes;\n    state.routes = _router.constantRoutes.concat(routes);\n  }\n};\nvar actions = {\n  generateRoutes: function generateRoutes(_ref, roles) {\n    var commit = _ref.commit;\n    return new Promise(function (resolve) {\n      var accessedRoutes;\n\n      if (roles.includes('admin')) {\n        accessedRoutes = _router.asyncRoutes || [];\n      } else {\n        accessedRoutes = filterAsyncRoutes(_router.asyncRoutes, roles);\n      }\n\n      commit(\"SET_ROUTES\", accessedRoutes);\n      resolve(accessedRoutes);\n    });\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",{"version":3,"sources":["/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/store/modules/permission.js"],"names":["hasPermission","roles","route","meta","some","role","includes","filterAsyncRoutes","routes","res","forEach","tmp","children","push","state","addRoutes","mutations","SET_ROUTES","constantRoutes","concat","actions","generateRoutes","commit","Promise","resolve","accessedRoutes","asyncRoutes","namespaced"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,SAASA,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAoC;AAChC,MAAGA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACC,IAAN,CAAWF,KAA5B,EAAkC;AAC9B,WAAOA,KAAK,CAACG,IAAN,CAAW,UAAAC,IAAI;AAAA,aAAIH,KAAK,CAACC,IAAN,CAAWF,KAAX,CAAiBK,QAAjB,CAA0BD,IAA1B,CAAJ;AAAA,KAAf,CAAP;AACH,GAFD,MAEO;AACH,WAAO,IAAP;AACH;AACJ;;AAEM,SAASE,iBAAT,CAA2BC,MAA3B,EAAmCP,KAAnC,EAAyC;AAC5C,MAAMQ,GAAG,GAAG,EAAZ;AACAD,EAAAA,MAAM,CAACE,OAAP,CAAe,UAAAR,KAAK,EAAI;AACpB,QAAMS,GAAG,qBAAOT,KAAP,CAAT;;AACA,QAAGF,aAAa,CAACC,KAAD,EAAQU,GAAR,CAAhB,EAA6B;AACzB,UAAGA,GAAG,CAACC,QAAJ,EAAH,EAAkB;AACdD,QAAAA,GAAG,CAACC,QAAJ,GAAeL,iBAAiB,CAACI,GAAG,CAACC,QAAJ,EAAD,EAAiBX,KAAjB,CAAhC;AACH;;AACDQ,MAAAA,GAAG,CAACI,IAAJ,CAASF,GAAT;AACH;AACJ,GARD;AASA,SAAOF,GAAP;AACH;;AAED,IAAMK,KAAK,GAAG;AACVN,EAAAA,MAAM,EAAE,EADE;AAEVO,EAAAA,SAAS,EAAE;AAFD,CAAd;AAKA,IAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE,oBAACH,KAAD,EAAQN,MAAR,EAAmB;AAC3BM,IAAAA,KAAK,CAACC,SAAN,GAAkBP,MAAlB;AACAM,IAAAA,KAAK,CAACN,MAAN,GAAeU,uBAAeC,MAAf,CAAsBX,MAAtB,CAAf;AACH;AAJa,CAAlB;AAOA,IAAMY,OAAO,GAAG;AACZC,EAAAA,cADY,gCACapB,KADb,EACmB;AAAA,QAAfqB,MAAe,QAAfA,MAAe;AAC3B,WAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1B,UAAIC,cAAJ;;AACA,UAAGxB,KAAK,CAACK,QAAN,CAAe,OAAf,CAAH,EAA2B;AACvBmB,QAAAA,cAAc,GAAGC,uBAAe,EAAhC;AACH,OAFD,MAEO;AACHD,QAAAA,cAAc,GAAGlB,iBAAiB,CAACmB,mBAAD,EAAczB,KAAd,CAAlC;AACH;;AACDqB,MAAAA,MAAM,CAAC,YAAD,EAAeG,cAAf,CAAN;AACAD,MAAAA,OAAO,CAACC,cAAD,CAAP;AACH,KATM,CAAP;AAUH;AAZW,CAAhB;eAee;AACXE,EAAAA,UAAU,EAAE,IADD;AAEXb,EAAAA,KAAK,EAALA,KAFW;AAGXE,EAAAA,SAAS,EAATA,SAHW;AAIXI,EAAAA,OAAO,EAAPA;AAJW,C","sourcesContent":["import {asyncRoutes, constantRoutes} from '@/router'\n\nfunction hasPermission(roles, route){\n    if(route.meta && route.meta.roles){\n        return roles.some(role => route.meta.roles.includes(role))\n    } else {\n        return true\n    }\n}\n\nexport function filterAsyncRoutes(routes, roles){\n    const res = [];\n    routes.forEach(route => {\n        const tmp = {...route};\n        if(hasPermission(roles, tmp)){\n            if(tmp.children()){\n                tmp.children = filterAsyncRoutes(tmp.children(), roles)\n            }\n            res.push(tmp);\n        }\n    })\n    return res;\n}\n\nconst state = {\n    routes: [],\n    addRoutes: []\n}\n\nconst mutations = {\n    SET_ROUTES: (state, routes) => {\n        state.addRoutes = routes\n        state.routes = constantRoutes.concat(routes)\n    }\n}\n\nconst actions = {\n    generateRoutes({commit}, roles){\n        return new Promise(resolve => {\n            let accessedRoutes\n            if(roles.includes('admin')){\n                accessedRoutes = asyncRoutes || []\n            } else {\n                accessedRoutes = filterAsyncRoutes(asyncRoutes, roles)\n            }\n            commit(\"SET_ROUTES\", accessedRoutes);\n            resolve(accessedRoutes);\n        })\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions\n}"]}]}