{"remainingRequest":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/layout/components/NavBar/Breadcrumb.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/layout/components/NavBar/Breadcrumb.vue","mtime":1569321374712},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nvar _pathToRegexp = _interopRequireDefault(require(\"path-to-regexp\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Breadcrumb',\n  data: function data() {\n    return {\n      levelList: null\n    };\n  },\n  created: function created() {\n    this.getBreadcrumb();\n  },\n  watch: {\n    $route: function $route(route) {\n      if (route.path.startsWith('/redirect/')) {\n        return;\n      }\n\n      this.getBreadcrumb();\n    }\n  },\n  methods: {\n    getBreadcrumb: function getBreadcrumb() {\n      var matched = this.$route.matched.filter(function (item) {\n        return item.meta && item.meta.title;\n      });\n      var first = matched[0];\n\n      if (!this.isDashboard(first)) {\n        matched = [{\n          path: '/',\n          meta: {\n            title: 'Home'\n          }\n        }].concat(matched);\n      }\n\n      this.levelList = matched.filter(function (item) {\n        return item.meta && item.meta.title && item.meta.breadcrumb != false;\n      });\n    },\n    isDashboard: function isDashboard(route) {\n      var name = route && route.name;\n\n      if (!name) {\n        return false;\n      }\n\n      return name.trim().toLocaleLowerCase() === 'Dashboard'.toLocaleLowerCase();\n    },\n    handleLink: function handleLink(item) {\n      var redirect = item.redirect,\n          path = item.path;\n\n      if (redirect) {\n        this.$router.push(redirect);\n        return;\n      }\n\n      this.$router.push(this.pathCompile(path));\n    },\n    pathCompile: function pathCompile(path) {\n      var params = this.$route.params;\n\n      var toPath = _pathToRegexp.default.compile(path);\n\n      return toPath(params);\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["Breadcrumb.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAYA;;;;;;;;;;;;;eACA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AACA,SAAA,aAAA;AACA,GATA;AAUA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,kBACA,KADA,EACA;AACA,UAAA,KAAA,CAAA,IAAA,CAAA,UAAA,CAAA,YAAA,CAAA,EAAA;AACA;AACA;;AACA,WAAA,aAAA;AACA;AANA,GAVA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,UAAA,OAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,CAAA,KAAA;AAAA,OAAA,CAAA;AACA,UAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA;;AACA,UAAA,CAAA,KAAA,WAAA,CAAA,KAAA,CAAA,EAAA;AACA,QAAA,OAAA,GAAA,CAAA;AAAA,UAAA,IAAA,EAAA,GAAA;AAAA,UAAA,IAAA,EAAA;AAAA,YAAA,KAAA,EAAA;AAAA;AAAA,SAAA,EAAA,MAAA,CAAA,OAAA,CAAA;AACA;;AACA,WAAA,SAAA,GAAA,OAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,CAAA,KAAA,IAAA,IAAA,CAAA,IAAA,CAAA,UAAA,IAAA,KAAA;AAAA,OAAA,CAAA;AACA,KARA;AASA,IAAA,WATA,uBASA,KATA,EASA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA,KAAA,CAAA,IAAA;;AACA,UAAA,CAAA,IAAA,EAAA;AACA,eAAA,KAAA;AACA;;AACA,aAAA,IAAA,CAAA,IAAA,GAAA,iBAAA,OAAA,YAAA,iBAAA,EAAA;AACA,KAfA;AAgBA,IAAA,UAhBA,sBAgBA,IAhBA,EAgBA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAAA,UACA,IADA,GACA,IADA,CACA,IADA;;AAEA,UAAA,QAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA;AACA;;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,KAAA,WAAA,CAAA,IAAA,CAAA;AACA,KAvBA;AAwBA,IAAA,WAxBA,uBAwBA,IAxBA,EAwBA;AAAA,UACA,MADA,GACA,KAAA,MADA,CACA,MADA;;AAEA,UAAA,MAAA,GAAA,sBAAA,OAAA,CAAA,IAAA,CAAA;;AACA,aAAA,MAAA,CAAA,MAAA,CAAA;AACA;AA5BA;AAlBA,C","sourcesContent":["<template>\n    <el-breadcrumb class=\"app-breadcrumb\" separator=\"/\">\n        <transition-group name=\"breadcrumb\">\n            <el-breadcrumb-item v-for=\"(item, index) in levelList\" :key=\"item.path\">\n                <span v-if=\"item.redirect == 'noRedirect' || index == levelList.length - 1\" class=\"no-redirect\">{{item.meta.title}}</span>\n                <a v-else @click.prevent=\"handleLink(item)\">{{item.meta.title}}</a>\n            </el-breadcrumb-item>\n        </transition-group>\n    </el-breadcrumb>\n</template>\n\n<script>\n    import pathToRegexp from 'path-to-regexp'\n    export default {\n        name: 'Breadcrumb',\n        data(){\n            return {\n                levelList: null\n            }\n        },\n        created(){\n            this.getBreadcrumb()\n        },\n        watch:{\n            $route(route){\n                if(route.path.startsWith('/redirect/')){\n                    return\n                }\n                this.getBreadcrumb()\n            }\n        },\n        methods: {\n            getBreadcrumb(){\n                let matched = this.$route.matched.filter(item => item.meta && item.meta.title)\n                const first = matched[0]\n                if(!this.isDashboard(first)){\n                    matched = [{path: '/', meta: {title: 'Home'}}].concat(matched);\n                }\n                this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb != false)\n            },\n            isDashboard(route){\n                const name = route && route.name\n                if(!name){\n                    return false\n                }\n                return name.trim().toLocaleLowerCase() === 'Dashboard'.toLocaleLowerCase()\n            },\n            handleLink(item){\n                const {redirect, path} = item;\n                if(redirect){\n                    this.$router.push(redirect);\n                    return\n                }\n                this.$router.push(this.pathCompile(path))\n            },\n            pathCompile(path){\n                const {params} = this.$route;\n                const toPath = pathToRegexp.compile(path);\n                return toPath(params);\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .app-breadcrumb.el-breadcrumb {\n        display: inline-block;\n        font-size: 14px;\n        line-height: 50px;\n        margin-left: 8px;\n\n        .no-redirect {\n            color: #97a8be;\n            cursor: text;\n        }\n    }\n</style>\n"],"sourceRoot":"src/layout/components/NavBar"}]}