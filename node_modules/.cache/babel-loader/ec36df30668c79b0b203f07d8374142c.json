{"remainingRequest":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/store/modules/user1.js","dependencies":[{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/store/modules/user1.js","mtime":1569222204893},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _user = require(\"@/api/login/user\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _router = _interopRequireWildcard(require(\"@/router\"));\n\nvar state = {\n  token: (0, _auth.getToken)(),\n  name: '',\n  avatar: '',\n  introduction: '',\n  roles: []\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_INTRODUCTION: function SET_INTRODUCTION(state, introduction) {\n    state.introduction = introduction;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  SET_ROLES: function SET_ROLES(state, roles) {\n    state.roles = roles;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    var username = userInfo.username,\n        password = userInfo.password;\n    return new Promise(function (resolve, reject) {\n      (0, _user.login)({\n        username: username.trim(),\n        password: password\n      }).then(function (response) {\n        var data = response.data;\n        commit('SET_TOKEN', data.token);\n        (0, _auth.setToken)(data.token);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // get user info\n  getInfo: function getInfo(_ref2) {\n    var commit = _ref2.commit,\n        state = _ref2.state;\n    return new Promise(function (resolve, reject) {\n      (0, _user.getInfo)(state.token).then(function (response) {\n        var data = response.data;\n\n        if (!data) {\n          reject('Verification failed, please Login again.');\n        }\n\n        var roles = data.roles,\n            name = data.name,\n            avatar = data.avatar,\n            introduction = data.introduction; // roles must be a non-empty array\n\n        if (!roles || roles.length <= 0) {\n          reject('getInfo: roles must be a non-null array!');\n        }\n\n        commit('SET_ROLES', roles);\n        commit('SET_NAME', name);\n        commit('SET_AVATAR', avatar);\n        commit('SET_INTRODUCTION', introduction);\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref3) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n    return new Promise(function (resolve, reject) {\n      (0, _user.logout)(state.token).then(function () {\n        commit('SET_TOKEN', '');\n        commit('SET_ROLES', []);\n        (0, _auth.removeToken)();\n        (0, _router.resetRouter)();\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve) {\n      commit('SET_TOKEN', '');\n      commit('SET_ROLES', []);\n      (0, _auth.removeToken)();\n      resolve();\n    });\n  },\n  // dynamically modify permissions\n  changeRoles: function changeRoles(_ref5, role) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n    return new Promise(\n    /*#__PURE__*/\n    function () {\n      var _ref6 = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(resolve) {\n        var token, _ref7, roles, accessRoutes;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = role + '-token';\n                commit('SET_TOKEN', token);\n                (0, _auth.setToken)(token);\n                _context.next = 5;\n                return dispatch('getInfo');\n\n              case 5:\n                _ref7 = _context.sent;\n                roles = _ref7.roles;\n                (0, _router.resetRouter)(); // generate accessible routes map based on roles\n\n                _context.next = 10;\n                return dispatch('permission/generateRoutes', roles, {\n                  root: true\n                });\n\n              case 10:\n                accessRoutes = _context.sent;\n\n                _router.default.addRoutes(accessRoutes); // reset visited views and cached views\n\n\n                dispatch('tagsView/delAllViews', null, {\n                  root: true\n                });\n                resolve();\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",{"version":3,"sources":["/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/store/modules/user1.js"],"names":["state","token","name","avatar","introduction","roles","mutations","SET_TOKEN","SET_INTRODUCTION","SET_NAME","SET_AVATAR","SET_ROLES","actions","login","userInfo","commit","username","password","Promise","resolve","reject","trim","then","response","data","catch","error","getInfo","length","logout","resetToken","changeRoles","role","dispatch","root","accessRoutes","router","addRoutes","namespaced"],"mappings":"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","sourcesContent":["import { login, logout, getInfo } from '@/api/login/user'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\nimport router, { resetRouter } from '@/router'\n\nconst state = {\n    token: getToken(),\n    name: '',\n    avatar: '',\n    introduction: '',\n    roles: []\n}\n\nconst mutations = {\n    SET_TOKEN: (state, token) => {\n        state.token = token\n    },\n    SET_INTRODUCTION: (state, introduction) => {\n        state.introduction = introduction\n    },\n    SET_NAME: (state, name) => {\n        state.name = name\n    },\n    SET_AVATAR: (state, avatar) => {\n        state.avatar = avatar\n    },\n    SET_ROLES: (state, roles) => {\n        state.roles = roles\n    }\n}\n\nconst actions = {\n    // user login\n    login({ commit }, userInfo) {\n        const { username, password } = userInfo\n        return new Promise((resolve, reject) => {\n            login({ username: username.trim(), password: password }).then(response => {\n                const { data } = response\n                commit('SET_TOKEN', data.token)\n                setToken(data.token)\n                resolve()\n            }).catch(error => {\n                reject(error)\n            })\n        })\n    },\n\n    // get user info\n    getInfo({ commit, state }) {\n        return new Promise((resolve, reject) => {\n            getInfo(state.token).then(response => {\n                const { data } = response\n\n                if (!data) {\n                    reject('Verification failed, please Login again.')\n                }\n\n                const { roles, name, avatar, introduction } = data\n\n                // roles must be a non-empty array\n                if (!roles || roles.length <= 0) {\n                    reject('getInfo: roles must be a non-null array!')\n                }\n\n                commit('SET_ROLES', roles)\n                commit('SET_NAME', name)\n                commit('SET_AVATAR', avatar)\n                commit('SET_INTRODUCTION', introduction)\n                resolve(data)\n            }).catch(error => {\n                reject(error)\n            })\n        })\n    },\n\n    // user logout\n    logout({ commit, state }) {\n        return new Promise((resolve, reject) => {\n            logout(state.token).then(() => {\n                commit('SET_TOKEN', '')\n                commit('SET_ROLES', [])\n                removeToken()\n                resetRouter()\n                resolve()\n            }).catch(error => {\n                reject(error)\n            })\n        })\n    },\n\n    // remove token\n    resetToken({ commit }) {\n        return new Promise(resolve => {\n            commit('SET_TOKEN', '')\n            commit('SET_ROLES', [])\n            removeToken()\n            resolve()\n        })\n    },\n\n    // dynamically modify permissions\n    changeRoles({ commit, dispatch }, role) {\n        return new Promise(async resolve => {\n            const token = role + '-token'\n\n            commit('SET_TOKEN', token)\n            setToken(token)\n\n            const { roles } = await dispatch('getInfo')\n\n            resetRouter()\n\n            // generate accessible routes map based on roles\n            const accessRoutes = await dispatch('permission/generateRoutes', roles, { root: true })\n\n            // dynamically add accessible routes\n            router.addRoutes(accessRoutes)\n\n            // reset visited views and cached views\n            dispatch('tagsView/delAllViews', null, { root: true })\n\n            resolve()\n        })\n    }\n}\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions\n}\n"]}]}