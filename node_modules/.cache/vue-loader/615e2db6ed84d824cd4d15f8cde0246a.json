{"remainingRequest":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/layout/components/SideBar/Item.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/layout/components/SideBar/Item.vue","mtime":1569418922778},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nexport default {\n    name: 'MenuItem',\n    functional: true,\n    props: {\n        icon: {\n            type: String,\n            default: ''\n        },\n        title: {\n            type: String,\n            default: ''\n        }\n    },\n    render(h, context) {\n        let { icon, title } = context.props\n        const vnodes = []\n        if (icon) {\n            vnodes.push(<svg-icon icon-class={icon}/>)\n        }\n\n        if (title) {\n            vnodes.push(<span slot='title'>{(title)}</span>)\n        }\n        return vnodes\n    }\n}\n",{"version":3,"sources":["Item.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Item.vue","sourceRoot":"src/layout/components/SideBar","sourcesContent":["<script>\n    export default {\n        name: 'MenuItem',\n        functional: true,\n        props: {\n            icon: {\n                type: String,\n                default: ''\n            },\n            title: {\n                type: String,\n                default: ''\n            }\n        },\n        render(h, context) {\n            let { icon, title } = context.props\n            const vnodes = []\n            if (icon) {\n                vnodes.push(<svg-icon icon-class={icon}/>)\n            }\n\n            if (title) {\n                vnodes.push(<span slot='title'>{(title)}</span>)\n            }\n            return vnodes\n        }\n    }\n</script>\n"]}]}