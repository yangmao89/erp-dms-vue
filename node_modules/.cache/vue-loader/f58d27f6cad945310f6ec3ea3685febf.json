{"remainingRequest":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/src/views/login/index.vue","mtime":1569222460604},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/WebstormProjects/vue-demo/erp-web/erp-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'login',\n    data(){\n        return {\n            loginForm: {\n                username: 'admin',\n                password: '111111'\n            },\n            rules: {\n                username: [{ required: true, trigger: 'blur'}],\n                password: [{ required: true, trigger: 'blur'}]\n            },\n            redirect: undefined,\n            otherQuery: {},\n            loading: false\n        }\n    },\n    watch: {\n        $route: {\n            handler: function(route){\n                const query = route.query;\n                this.redirect = query.redirect;\n                this.otherQuery = this.getOtherQuery(query);\n            },\n            immediate: true\n        }\n    },\n    methods: {\n        handleLogin(){\n            this.$refs.loginForm.validate((isValid) => {\n                if(isValid){\n                    this.loading = true;\n                    this.$store.dispatch(\"user/login\", this.loginForm)\n                        .then(() => {\n                            this.$router.push({path: this.redirect || \"/\", query: this.otherQuery})\n                            this.loading = false\n                        })\n                        .catch(() => {\n                            this.loading = false\n                        })\n                } else {\n                    return false;\n                }\n            })\n        },\n        getOtherQuery(query){\n            return Object.keys(query).reduce((acc, cur)=>{\n                if(cur != 'redirect'){\n                    acc[cur] = query[cur];\n                }\n                return acc;\n            }, {})\n        }\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/login","sourcesContent":["<template>\n    <div class=\"login-container\">\n        <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"rules\" class=\"login-form\" label-position=\"left\">\n            <div class=\"title-container\">\n                <h3 class=\"title\">Login Form</h3>\n            </div>\n\n            <el-form-item prop=\"username\">\n                <el-input\n                        v-model=\"loginForm.username\"\n                        placeholder=\"Username\"\n                        name=\"username\"\n                        type=\"text\"\n                />\n            </el-form-item>\n\n            <el-form-item prop=\"password\">\n                <el-input\n                        v-model=\"loginForm.password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        @keyup.enter.native=\"handleLogin\"\n                />\n            </el-form-item>\n\n            <el-button :loading=\"loading\" type=\"primary\" style=\"width:100%;margin-bottom:30px;\" @click.native.prevent=\"handleLogin\">Login</el-button>\n        </el-form>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'login',\n        data(){\n            return {\n                loginForm: {\n                    username: 'admin',\n                    password: '111111'\n                },\n                rules: {\n                    username: [{ required: true, trigger: 'blur'}],\n                    password: [{ required: true, trigger: 'blur'}]\n                },\n                redirect: undefined,\n                otherQuery: {},\n                loading: false\n            }\n        },\n        watch: {\n            $route: {\n                handler: function(route){\n                    const query = route.query;\n                    this.redirect = query.redirect;\n                    this.otherQuery = this.getOtherQuery(query);\n                },\n                immediate: true\n            }\n        },\n        methods: {\n            handleLogin(){\n                this.$refs.loginForm.validate((isValid) => {\n                    if(isValid){\n                        this.loading = true;\n                        this.$store.dispatch(\"user/login\", this.loginForm)\n                            .then(() => {\n                                this.$router.push({path: this.redirect || \"/\", query: this.otherQuery})\n                                this.loading = false\n                            })\n                            .catch(() => {\n                                this.loading = false\n                            })\n                    } else {\n                        return false;\n                    }\n                })\n            },\n            getOtherQuery(query){\n                return Object.keys(query).reduce((acc, cur)=>{\n                    if(cur != 'redirect'){\n                        acc[cur] = query[cur];\n                    }\n                    return acc;\n                }, {})\n            }\n        }\n    }\n</script>\n\n\n<style lang=\"scss\">\n    /* 修复input 背景不协调 和光标变色 */\n    /* Detail see https://github.com/PanJiaChen/vue-element-admin/pull/927 */\n\n    $bg:#283443;\n    $light_gray:#fff;\n    $cursor: #fff;\n\n    @supports (-webkit-mask: none) and (not (cater-color: $cursor)) {\n        .login-container .el-input input {\n            color: $cursor;\n        }\n    }\n\n    /* reset element-ui css */\n    .login-container {\n        .el-input {\n            display: inline-block;\n            height: 47px;\n            width: 85%;\n\n            input {\n                background: transparent;\n                border: 0px;\n                -webkit-appearance: none;\n                border-radius: 0px;\n                padding: 12px 5px 12px 15px;\n                color: $light_gray;\n                height: 47px;\n                caret-color: $cursor;\n\n                &:-webkit-autofill {\n                    box-shadow: 0 0 0px 1000px $bg inset !important;\n                    -webkit-text-fill-color: $cursor !important;\n                }\n            }\n        }\n\n        .el-form-item {\n            border: 1px solid rgba(255, 255, 255, 0.1);\n            background: rgba(0, 0, 0, 0.1);\n            border-radius: 5px;\n            color: #454545;\n        }\n    }\n</style>\n\n<style lang=\"scss\" scoped>\n    $bg:#2d3a4b;\n    $dark_gray:#889aa4;\n    $light_gray:#eee;\n\n    .login-container {\n        min-height: 100%;\n        width: 100%;\n        background-color: $bg;\n        overflow: hidden;\n\n        .login-form {\n            position: relative;\n            width: 520px;\n            max-width: 100%;\n            padding: 160px 35px 0;\n            margin: 0 auto;\n            overflow: hidden;\n        }\n\n        .tips {\n            font-size: 14px;\n            color: #fff;\n            margin-bottom: 10px;\n\n            span {\n                &:first-of-type {\n                    margin-right: 16px;\n                }\n            }\n        }\n\n        .svg-container {\n            padding: 6px 5px 6px 15px;\n            color: $dark_gray;\n            vertical-align: middle;\n            width: 30px;\n            display: inline-block;\n        }\n\n        .title-container {\n            position: relative;\n\n            .title {\n                font-size: 26px;\n                color: $light_gray;\n                margin: 0px auto 40px auto;\n                text-align: center;\n                font-weight: bold;\n            }\n        }\n\n        .show-pwd {\n            position: absolute;\n            right: 10px;\n            top: 7px;\n            font-size: 16px;\n            color: $dark_gray;\n            cursor: pointer;\n            user-select: none;\n        }\n\n        .thirdparty-button {\n            position: absolute;\n            right: 0;\n            bottom: 6px;\n        }\n\n        @media only screen and (max-width: 470px) {\n            .thirdparty-button {\n                display: none;\n            }\n        }\n    }\n</style>\n"]}]}